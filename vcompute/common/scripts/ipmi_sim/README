Date: 6/19/15
Authors: Paul Scharlach, Hongtao Zhang

Summary:
This file describes how to use the sensor simulator tool. Under the hoods, it is using the ipmi_sim tool, but is providing a front-end interface that makes it more user friendly

High level usage:
The tool is planned to be used in three modes:

1) CLI mode: this allow the user to run single sensor modification commands from the command line					(CURRENTLY NOT SUPPORTED)
2) Prompt mode: this allows the user to run multiple commands from a prompt								(CURRENTLY SUPPORTED)
3) File mode: this allows the user to run from the command line and input a file of pre-determined sensor modification commands		(CURRENTLY NOT SUPPORTED)

Detailed usage:
To start the tool
=================
From vBMC: At /root, execute ./ipmi_sim.py
This will bring you to the "IPMI_SIM >> " prompt where you can execute the commands below

More description of the supported modes above
=============================================
Prompt mode:
quit: to quit the simulator wrapper

help: show available commands from top level. More detail is available at the lower level commands

sensor: this gives many capabilities into the sensors (described here)
	info: get detailed information on the sensors available
              Command format:
	      sensor info
	mode: this gives the ability to set or get a sensor mode. The available modes include: static, auto, or manual. Each individual sensor can be in its own mode.
	      user mode: leaves the sensor reading as it currently is until instructed otherwise
	      auto mode:   changes the sensor reading to a random value between the lnc and unc thresholds
	      fault mode: changes the sensor reading to a random value to cause a particular type of fault as instructed (lnr, lc, lnc, unc, uc, unr)
	      Command format:
	      sensor mode get <sensorID>
	      sensor mode set <sensorID> <user>
	      sensor mode set <sensorID> <auto>
	      sensor mode set <sensorID> <fault> <lnr | lc | lnc | unc | nc | unr>
	value: this allows the user to get a sensor value or to manually set a sensor value
	      Command format:
	      sensor value get <sensorID>
	      sensor value set <sensorID> <value>

sel: allows user to set sensor events in the SEL without causing the actual threshold crossing
	sel set <sensorID> <event_code> <event_data1> <event_data2> <event_data3>

history: this lists out the last 30 commands issued to the sensor simulator tool

sel: this is gives capabilities to read/modify the sel
